{
  "Backend": {
    "skill": {
      "Deno": "Kokemusta Denon käytöstä modernina ja turvallisena suoritusympäristönä palvelinpuolen sovelluksille. Oak-kehyksen kanssa tukee ylläpidettäviä MPA- ja SPA-arkkitehtuureja sisäänrakennetuilla työkaluilla ja tiukalla tietoturvalla",
      "Express": "Express on kevyt ja joustava Node.js-kehys palvelinpuolen sovellusten ja REST-rajapintojen rakentamiseen. Kokemusta middlewarejen toteutuksesta, kuten autentikointi, lokitus, virheiden käsittely ja pyyntöjen hallinta, mahdollistaen ylläpidettävät ja laajennettavat backend-järjestelmät",
      "Firebase": "Firebase tarjoaa taustapalveluita reaaliaikaisen datan synkronointiin, analytiikkaan, kaatumisraportointiin ja sovelluksen seurantaan — erityisesti mobiili- ja verkkosovelluksia varten. Käyttänyt laajasti suorituskyvyn ja kaatumisten seuraamiseen, käyttäjätietojen keräämiseen ja sovellusten luotettavuuden ylläpitämiseen koko elinkaaren ajan",
      "GraphQL": "GraphQL mahdollistaa joustavan ja tehokkaan tiedon kyselyn, jossa asiakaspuoli voi hakea tarkalleen tarvitsemansa datan. Tämä vähentää ylikyselyä ja parantaa suorituskykyä. Kokemusta GraphQL-rajapintojen rakentamisesta ja niiden yhdistämisestä NoSQL-tietokantoihin, mahdollistaen dynaamisen ja asiakaslähtöisen tiedonhallinnan moderneissa verkkosovelluksissa",
      "Node": "Node.js on ei-blokkaava, tapahtumapohjainen ajonaikainen ympäristö, joka soveltuu erinomaisesti skaalautuvien verkkosovellusten ja reaaliaikapalveluiden kehittämiseen. Kokemusta Node.js:n käytöstä REST-rajapintojen rakentamiseen, asynkronisten toimintojen hallintaan ja backend-järjestelmien kehittämiseen moderneissa verkkosovelluksissa",
      "NoSQL": "NoSQL-tietokannat tarjoavat skeemajoustavuutta ja horisontaalista skaalautuvuutta, mikä tekee niistä ihanteellisia rakenteettoman tai nopeasti muuttuvan datan käsittelyyn hajautetuissa ympäristöissä. Kokemusta MongoDB:n käytöstä ei-relationaalisten tietorakenteiden hallintaan ja käsittelyyn",
      "REST APIs": "REST-rajapinnat tarjoavat standardoidun tavan asiakas- ja palvelinkomponenttien väliseen viestintään HTTP:n yli. Kokemusta REST APIen suunnittelusta ja integroinnista tietojen vaihdon tukemiseksi, modulaarisuuden parantamiseksi ja skaalautuvien verkkosovellusten toteuttamiseksi",
      "SQL": "Relaatiotietokannat tarjoavat vahvan konsistenssin, monimutkaisten kyselyiden tuen ja transaktioiden eheyden, mikä tekee niistä keskeisiä järjestelmissä, joissa vaaditaan rakenteellista dataa ja luotettavaa toimintaa. Kokemusta PostgreSQL:n käytöstä normaalimuotoisten skeemojen suunnittelussa, relaatiologiikan toteutuksessa ja datan hallinnassa tarkalla kontrollilla yliopistoprojekteissa ja backend-kehityksessä"
    },
    "subcategories": {
      "APIs": "Rajapinnat",
      "Cloud Services": "Pilvipalvelut",
      "Databases": "Tietokannat",
      "Frameworks & Runtimes": "Kehykset & Suoritusympäristöt"
    }
  },
  "Frontend": {
    "skill": {
      "Apollo GraphQL": "Apollo Client helpottaa datan hakua, välimuistin hallintaa ja tilanhallintaa React-sovelluksissa GraphQL:n avulla. Laaja kokemus Apollon integroimisesta käyttöliittymään GraphQL-rajapintojen kautta, mahdollistaen tehokkaan ja asiakaslähtöisen tiedonhallinnan",
      "CSS": "Nautin responsiivisten ja visuaalisesti hienostuneiden käyttöliittymien kehittämisestä hyödyntämällä moderneja CSS-tekniikoita, kuten Flexboxia, Gridiä, media queryjä ja CSS-muuttujia. Keskityn luomaan ylläpidettäviä, skaalautuvia ja yhtenäisiä tyylejä, jotka toimivat saumattomasti eri laitteilla ja näytöillä",
      "HTML5": "HTML5 toimii verkkosisällön rakenteellisena, semanttisena ja saavutettavana perustana. Noudatan nykyaikaisia HTML-standardeja varmistaakseni ylläpidettävyyden, hakukoneoptimoinnin ja saumattoman toiminnan kaikilla alustoilla ja laitteilla",
      "React": "React on deklaratiivinen JavaScript-kirjasto interaktiivisten käyttöliittymien rakentamiseen komponenttipohjaisella arkkitehtuurilla. Laaja kokemus Reactin parissa työskentelystä sekä vahva ymmärrys sen keskeisistä käsitteistä, kuten hookeista ja tilanhallinnasta. Tämä portfoliosivusto on rakennettu kokonaan Reactilla, esimerkkinä suorituskyvystä, skaalautuvuudesta ja moderneista frontend-käytännöistä",
      "React Native": "React Native mahdollistaa alustariippumattomien mobiilisovellusten kehittämisen JavaScriptillä ja Reactin periaatteilla. Päivittäinen työkokemus on tuonut syvällistä osaamista uusien ominaisuuksien kehittämiseen, natiivimoduulien integrointiin ja suorituskyvyn optimointiin — tavoitteena sujuva ja natiivimainen käyttökokemus Android- ja iOS-laitteilla",
      "Redux": "Redux on ennustettava tilanhallintakirjasto, joka helpottaa tilan hallintaa React-sovelluksissa. Laaja kokemus Reduxin käytöstä tuotanto- ja henkilökohtaisissa projekteissa skaalautuvan ja testattavan tilanhallinnan toteuttamiseen",
      "Redux-Saga": "Redux-Saga on middleware-kirjasto, joka hallitsee monimutkaisia asynkronisia prosesseja Redux-sovelluksissa generator-funktioiden avulla. Laajaa työkokemusta sen hyödyntämisestä API-kutsuihin, taustaprosesseihin,  virheiden käsittelyyn ja sivuvaikutusten keskitettyyn hallintaan",
      "SVG": "SVG (Scalable Vector Graphics) soveltuu erinomaisesti tarkkojen ja skaalautuvien grafiikoiden ja ikonien luomiseen. Kokemusta kevyiden ja skaalautuvien vektorikuvien suunnittelussa moderneihin verkkosovelluksiin"
    },
    "subcategories": {
      "Frameworks & Libraries": "Kehykset & Kirjastot",
      "Markup & Styling": "Merkintäkieli & Tyylit",
      "Server State Management": "Palvelinpuolen tilanhallinta",
      "State Management": "Tilanhallinta"
    }
  },
  "Misc": {
    "skill": {
      "C++": "C++ on suorituskykyinen kieli, joka soveltuu erityisesti järjestelmäohjelmointiin, pelikehitykseen ja matalan tason muistinhallintaa vaativiin sovelluksiin. Olen käyttänyt C++:aa pelien kehittämiseen ja suorituskyvyn optimointiin rinnakkaislaskennan avulla",
      "CI/CD": "CI/CD automatisoi ohjelmiston rakentamisen, testauksen ja käyttöönoton, mikä parantaa kehitysnopeutta ja ohjelmiston luotettavuutta. Olen rakentanut julkaisuputkia GitHub Actionsin avulla (esimerkiksi tämän portfoliosivuston julkaisuun), ja kokemusta myös GitLabin CI/CD-prosessista sekä Jenkinsistä. Ammattikokemusta on myös mobiilisovellusten julkaisemisesta OTA-päivityksillä",
      "Cypress": "Cypress on end-to-end-testaukseen tarkoitettu työkalu modernien verkkosovellusten testaamiseen. Käytän Cypressiä simuloimaan todellisia käyttäjätoimintoja ja validoimaan koko sovelluspolkuja käyttöliittymästä palvelimeen asti. Se auttaa varmistamaan, että kriittiset toiminnot, kuten kirjautuminen, navigointi ja tiedon lähetys, toimivat luotettavasti eri selaimissa",
      "Docker": "Docker mahdollistaa yhdenmukaiset ja siirrettävät sovellusympäristöt paketoimalla koodin ja riippuvuudet kontteihin. Olen käyttänyt Dockeria projekteissa kontittaakseni sovelluksia ja varmistaakseni ennakoitavan käyttäytymisen kehitys- ja tuotantoympäristöissä",
      "Git": "Git on keskeinen versionhallintatyökalu koodipohjien hallintaan ja kehittäjien yhteistyöhön. Käytän Gitiä päivittäin työssäni, hallitsen esimerkiksi haarastrategiat, konfliktien ratkaisun ja tiimityöskentelyn jaetussa koodipohjassa",
      "JavaScript": "Keskeinen ohjelmointikieli sekä front-end- että back-end-kehityksessä. Kokemusta dynaamisten ja interaktiivisten verkkosovellusten rakentamisesta sekä JavaScript-kehysten ja -kirjastojen hyödyntämisestä erilaisissa ympäristöissä",
      "Jest": "Jest on tehokas JavaScript-testauskehys, jota käytetään luotettavien testien kirjoittamiseen sekä frontend- että backend-sovelluksiin. Käytän Jestiä varmistaakseni koodin toimivuuden yksikkötesteillä ja integraatiotesteillä, jotka testaavat moduulien välistä vuorovaikutusta. Hyödynnän myös mockausta hallituissa testausympäristöissä, mikä parantaa testien luotettavuutta ja ylläpidettävyyttä",
      "Python": "Python on laajalti käytetty kieli skriptaukseen, automaatioon, datan käsittelyyn ja koneoppimiseen sen selkeyden ja laajan kirjastoekosysteemin ansiosta. Olen käyttänyt Pythonia pääasiassa yliopistoprojekteissa, mukaan lukien syväoppimiseen perustuvat sovellukset ja akateemiset tutkimustehtävät",
      "TypeScript": "TypeScript parantaa koodin laatua ja ylläpidettävyyttä staattisen tyypityksen ja nykyaikaisten kieliominaisuuksien avulla. Käytössä päivittäin työympäristössä skaalautuvien sovellusten kehittämiseen, joissa virheiden määrä vähenee ja kehitysnopeus paranee",
      "Webpack": "Webpack on tehokas moduulipaketoija, jota käytetään JavaScript-sovellusten optimointiin ja kokoamiseen. Olen käyttänyt ja konfiguroinut Webpackia frontend-projektien resurssien niputtamiseen sekä hyödyntänyt ominaisuuksia kuten koodin pilkkominen (code splitting), turhan koodin poisto (tree shaking) ja tehokkaat tuotantorakenteet erityisesti omissa React-projekteissani"
    },
    "subcategories": {
      "DevOps & Tools": "DevOps & Työkalut",
      "Languages": "Kielet",
      "Testing": "Testaus",
      "Version Control": "Versionhallinta"
    }
  }
}
